"use strict";

var EventEmitter = require("events").EventEmitter;

function observe(proto) {
  var obj = new EventEmitter();

  function add(obj, prop) {
    var val = arguments[2] === undefined ? null : arguments[2];

    var _prop = "_" + prop;
    if (!obj.hasOwnProperty(_prop)) obj[_prop] = val;

    Object.defineProperty(obj, prop, {
      get: function get() {
        return this[_prop];
      },
      set: function set(v) {
        if (v !== this["_" + prop]) {
          this.emit("change", { property: prop, oldValue: this["_" + prop], value: v });
          this["_" + prop] = v;
        }
      },
      enumerable: true,
      configurable: true
    });
  }

  for (var prop in proto) {
    add(obj, prop, proto[prop]);
  }

  return obj;
}

module.exports = observe;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzNi9oZWxwZXJzL3pvb21lci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLElBQUksWUFBWSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxZQUFZLENBQUM7O0FBRWxELFNBQVMsT0FBTyxDQUFDLEtBQUssRUFBQztBQUNyQixNQUFJLEdBQUcsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDOztBQUU3QixXQUFTLEdBQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFjO1FBQVosR0FBRyxnQ0FBRyxJQUFJOztBQUNoQyxRQUFJLEtBQUssR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLFFBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLENBQUM7O0FBRWpELFVBQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRTtBQUMvQixTQUFHLEVBQUUsZUFBVztBQUFFLGVBQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO09BQUU7QUFDdkMsU0FBRyxFQUFFLGFBQVMsQ0FBQyxFQUFFO0FBQ2YsWUFBRyxDQUFDLEtBQUssSUFBSSxPQUFLLElBQUksQ0FBRyxFQUFDO0FBQ3hCLGNBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUMsUUFBUSxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsSUFBSSxPQUFLLElBQUksQ0FBRyxFQUFFLE9BQVEsQ0FBQyxFQUFDLENBQUMsQ0FBQztBQUM1RSxjQUFJLE9BQUssSUFBSSxDQUFHLEdBQUcsQ0FBQyxDQUFDO1NBQ3RCO09BQ0Y7QUFDRCxnQkFBVSxFQUFFLElBQUk7QUFDaEIsa0JBQVksRUFBRSxJQUFJO0tBQ25CLENBQUMsQ0FBQztHQUVKOztBQUVELE9BQUksSUFBSSxJQUFJLElBQUksS0FBSyxFQUFFO0FBQ3JCLE9BQUcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0dBQzdCOztBQUVELFNBQU8sR0FBRyxDQUFDO0NBQ1o7O0FBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMiLCJmaWxlIjoiZXM2L2hlbHBlcnMvem9vbWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoXCJldmVudHNcIikuRXZlbnRFbWl0dGVyO1xuXG5mdW5jdGlvbiBvYnNlcnZlKHByb3RvKXtcbiAgbGV0IG9iaiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBmdW5jdGlvbiBhZGQob2JqLCBwcm9wLCB2YWwgPSBudWxsKSB7XG4gICAgdmFyIF9wcm9wID0gJ18nICsgcHJvcDtcbiAgICBpZiAoIW9iai5oYXNPd25Qcm9wZXJ0eShfcHJvcCkpIG9ialtfcHJvcF0gPSB2YWw7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBwcm9wLCB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpc1tfcHJvcF07IH0sXG4gICAgICBzZXQ6IGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgaWYodiAhPT0gdGhpc1tgXyR7cHJvcH1gXSl7XG4gICAgICAgICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB7cHJvcGVydHk6cHJvcCwgb2xkVmFsdWU6IHRoaXNbYF8ke3Byb3B9YF0sICd2YWx1ZSc6dn0pO1xuICAgICAgICAgIHRoaXNbYF8ke3Byb3B9YF0gPSB2O1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuXG4gIH1cblxuICBmb3IodmFyIHByb3AgaW4gcHJvdG8pIHtcbiAgICBhZGQob2JqLCBwcm9wLCBwcm90b1twcm9wXSk7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG9ic2VydmU7Il19