{
  "name": "get-set",
  "version": "0.1.0",
  "description": "Adds getters and setters Ã  la d3/jquery to a given object",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Use grunt test instead\" && exit 1"
  },
  "author": {
    "name": "Victor Saiz"
  },
  "license": "BSD-3",
  "dependencies": {
    "events": "~1.0.0"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "browserify": "~3.32.0",
    "grunt-browserify": "~1.3.1",
    "grunt-contrib-uglify": "~0.4.0",
    "mocha": "~1.17.1",
    "chai": "~1.9.0"
  },
  "readme": "## AddgetterSetter\n\n_A simple library for the lazy developper_\n\nAdds getter/setters to a given object, the type of getter and setters added will be of jquery/d3 type:\n\n``` js\nvar getSet = require('getSet');\n\nvar obj = {};\n\nvar addAcc = getSet(obj);\n  addAcc('with');\n  addAcc('height');\n// or addAcc(['with', 'height'])  \n\nobj.width(300);\nobj.with(); // => 300\n\n```\n\n## API\n\nThe main exported function takes the object to augment, that will then return a function to add the specified accessors to the object. \n\nThe lib will create non enumerable \"private\" underscored versions of your property, and the corresponding public getter/setter method.\n\n## Using\n\nYou can use the provided getSet.min.js or browserify your own with grunt.\nIn order to use grunt, from the root of the module just do\n```\nnpm install && grunt\n```\nThis will install the dependencies and re-compile browserified and minified versions of the lib.\nTo run the tests just navigate to the `tests` subdirectory and run the `index.html` file.",
  "readmeFilename": "README.md",
  "_id": "get-set@0.1.0",
  "dist": {
    "shasum": "e1fe75fcb5332ef22d832e8d75f4500afdbd37b4"
  },
  "_resolved": "git+https://github.com/vectorsize/get-set.git#1abc613b107d0c89d016d527aa2951bab3c4c8ef",
  "_from": "get-set@git+https://github.com/vectorsize/get-set.git#master"
}
